// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vroom.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "vroom.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Reply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Reply_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateScene_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateScene_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestroyScene_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyScene_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateMemory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateMemory_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateDataObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateDataObject_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CreateDataObject_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CreateTextureObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateTextureObject_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CreateTextureObject_Format_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CreateTextureObject_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RunProgram_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RunProgram_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetSkybox_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetSkybox_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSystemMatrix_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSystemMatrix_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UpdateSystemMatrix_MatrixType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* UpdateSystemMatrix_UpdateType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DestroyObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyObject_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_vroom_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_vroom_2eproto() {
  protobuf_AddDesc_vroom_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "vroom.proto");
  GOOGLE_CHECK(file != NULL);
  Reply_descriptor_ = file->message_type(0);
  static const int Reply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, error_code_),
  };
  Reply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Reply_descriptor_,
      Reply::default_instance_,
      Reply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, _has_bits_[0]),
      -1,
      -1,
      sizeof(Reply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, _internal_metadata_),
      -1);
  CreateScene_descriptor_ = file->message_type(1);
  static const int CreateScene_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateScene, name_),
  };
  CreateScene_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateScene_descriptor_,
      CreateScene::default_instance_,
      CreateScene_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateScene, _has_bits_[0]),
      -1,
      -1,
      sizeof(CreateScene),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateScene, _internal_metadata_),
      -1);
  DestroyScene_descriptor_ = file->message_type(2);
  static const int DestroyScene_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyScene, id_),
  };
  DestroyScene_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DestroyScene_descriptor_,
      DestroyScene::default_instance_,
      DestroyScene_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyScene, _has_bits_[0]),
      -1,
      -1,
      sizeof(DestroyScene),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyScene, _internal_metadata_),
      -1);
  CreateMemory_descriptor_ = file->message_type(3);
  static const int CreateMemory_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMemory, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMemory, size_),
  };
  CreateMemory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateMemory_descriptor_,
      CreateMemory::default_instance_,
      CreateMemory_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMemory, _has_bits_[0]),
      -1,
      -1,
      sizeof(CreateMemory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMemory, _internal_metadata_),
      -1);
  CreateDataObject_descriptor_ = file->message_type(4);
  static const int CreateDataObject_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDataObject, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDataObject, memory_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDataObject, memory_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDataObject, memory_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDataObject, type_),
  };
  CreateDataObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateDataObject_descriptor_,
      CreateDataObject::default_instance_,
      CreateDataObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDataObject, _has_bits_[0]),
      -1,
      -1,
      sizeof(CreateDataObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDataObject, _internal_metadata_),
      -1);
  CreateDataObject_Type_descriptor_ = CreateDataObject_descriptor_->enum_type(0);
  CreateTextureObject_descriptor_ = file->message_type(5);
  static const int CreateTextureObject_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTextureObject, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTextureObject, data_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTextureObject, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTextureObject, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTextureObject, format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTextureObject, type_),
  };
  CreateTextureObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateTextureObject_descriptor_,
      CreateTextureObject::default_instance_,
      CreateTextureObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTextureObject, _has_bits_[0]),
      -1,
      -1,
      sizeof(CreateTextureObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTextureObject, _internal_metadata_),
      -1);
  CreateTextureObject_Format_descriptor_ = CreateTextureObject_descriptor_->enum_type(0);
  CreateTextureObject_Type_descriptor_ = CreateTextureObject_descriptor_->enum_type(1);
  RunProgram_descriptor_ = file->message_type(6);
  static const int RunProgram_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunProgram, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunProgram, program_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunProgram, register_id_),
  };
  RunProgram_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RunProgram_descriptor_,
      RunProgram::default_instance_,
      RunProgram_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunProgram, _has_bits_[0]),
      -1,
      -1,
      sizeof(RunProgram),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunProgram, _internal_metadata_),
      -1);
  SetSkybox_descriptor_ = file->message_type(7);
  static const int SetSkybox_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSkybox, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSkybox, texture_id_),
  };
  SetSkybox_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetSkybox_descriptor_,
      SetSkybox::default_instance_,
      SetSkybox_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSkybox, _has_bits_[0]),
      -1,
      -1,
      sizeof(SetSkybox),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSkybox, _internal_metadata_),
      -1);
  UpdateSystemMatrix_descriptor_ = file->message_type(8);
  static const int UpdateSystemMatrix_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSystemMatrix, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSystemMatrix, data_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSystemMatrix, data_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSystemMatrix, matrix_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSystemMatrix, update_type_),
  };
  UpdateSystemMatrix_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateSystemMatrix_descriptor_,
      UpdateSystemMatrix::default_instance_,
      UpdateSystemMatrix_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSystemMatrix, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpdateSystemMatrix),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSystemMatrix, _internal_metadata_),
      -1);
  UpdateSystemMatrix_MatrixType_descriptor_ = UpdateSystemMatrix_descriptor_->enum_type(0);
  UpdateSystemMatrix_UpdateType_descriptor_ = UpdateSystemMatrix_descriptor_->enum_type(1);
  DestroyObject_descriptor_ = file->message_type(9);
  static const int DestroyObject_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyObject, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyObject, id_),
  };
  DestroyObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DestroyObject_descriptor_,
      DestroyObject::default_instance_,
      DestroyObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyObject, _has_bits_[0]),
      -1,
      -1,
      sizeof(DestroyObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyObject, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_vroom_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Reply_descriptor_, &Reply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateScene_descriptor_, &CreateScene::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DestroyScene_descriptor_, &DestroyScene::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateMemory_descriptor_, &CreateMemory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateDataObject_descriptor_, &CreateDataObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateTextureObject_descriptor_, &CreateTextureObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RunProgram_descriptor_, &RunProgram::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetSkybox_descriptor_, &SetSkybox::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateSystemMatrix_descriptor_, &UpdateSystemMatrix::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DestroyObject_descriptor_, &DestroyObject::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_vroom_2eproto() {
  delete Reply::default_instance_;
  delete Reply_reflection_;
  delete CreateScene::default_instance_;
  delete CreateScene_reflection_;
  delete DestroyScene::default_instance_;
  delete DestroyScene_reflection_;
  delete CreateMemory::default_instance_;
  delete CreateMemory_reflection_;
  delete CreateDataObject::default_instance_;
  delete CreateDataObject_reflection_;
  delete CreateTextureObject::default_instance_;
  delete CreateTextureObject_reflection_;
  delete RunProgram::default_instance_;
  delete RunProgram_reflection_;
  delete SetSkybox::default_instance_;
  delete SetSkybox_reflection_;
  delete UpdateSystemMatrix::default_instance_;
  delete UpdateSystemMatrix_reflection_;
  delete DestroyObject::default_instance_;
  delete DestroyObject_reflection_;
}

void protobuf_AddDesc_vroom_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_vroom_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013vroom.proto\"\'\n\005Reply\022\n\n\002id\030\001 \002(\005\022\022\n\ner"
    "ror_code\030\002 \002(\005\"\033\n\013CreateScene\022\014\n\004name\030\001 "
    "\002(\t\"\032\n\014DestroyScene\022\n\n\002id\030\001 \002(\005\".\n\014Creat"
    "eMemory\022\020\n\010scene_id\030\001 \002(\005\022\014\n\004size\030\002 \002(\005\""
    "\375\001\n\020CreateDataObject\022\020\n\010scene_id\030\001 \002(\005\022\021"
    "\n\tmemory_id\030\002 \002(\005\022\025\n\rmemory_offset\030\003 \002(\005"
    "\022\025\n\rmemory_length\030\004 \002(\005\022$\n\004type\030\005 \002(\0162\026."
    "CreateDataObject.Type\"p\n\004Type\022\t\n\005UINT8\020\000"
    "\022\n\n\006UINT16\020\001\022\n\n\006UINT32\020\002\022\t\n\005FLOAT\020\003\022\010\n\004V"
    "EC2\020\004\022\010\n\004VEC3\020\005\022\010\n\004VEC4\020\006\022\010\n\004MAT2\020\007\022\010\n\004M"
    "AT3\020\010\022\010\n\004MAT4\020\t\"\265\002\n\023CreateTextureObject\022"
    "\020\n\010scene_id\030\001 \002(\005\022\017\n\007data_id\030\002 \002(\005\022\r\n\005wi"
    "dth\030\003 \002(\005\022\016\n\006height\030\004 \002(\005\022+\n\006format\030\005 \002("
    "\0162\033.CreateTextureObject.Format\022\'\n\004type\030\006"
    " \002(\0162\031.CreateTextureObject.Type\"X\n\006Forma"
    "t\022\n\n\006BGR888\020\000\022\014\n\010XBGR8888\020\001\022\014\n\010ABGR8888\020"
    "\002\022\n\n\006RGB888\020\003\022\014\n\010XRGB8888\020\004\022\014\n\010ARGB8888\020"
    "\005\",\n\004Type\022\016\n\nTEXTURE_2D\020\000\022\024\n\020TEXTURE_CUB"
    "E_MAP\020\001\"G\n\nRunProgram\022\020\n\010scene_id\030\001 \002(\005\022"
    "\022\n\nprogram_id\030\002 \002(\005\022\023\n\013register_id\030\003 \002(\005"
    "\"1\n\tSetSkybox\022\020\n\010scene_id\030\001 \002(\005\022\022\n\ntextu"
    "re_id\030\002 \002(\005\"\374\001\n\022UpdateSystemMatrix\022\020\n\010sc"
    "ene_id\030\001 \002(\005\022\017\n\007data_id\030\002 \002(\005\022\022\n\ndata_in"
    "dex\030\003 \002(\005\0223\n\013matrix_type\030\004 \002(\0162\036.UpdateS"
    "ystemMatrix.MatrixType\0223\n\013update_type\030\005 "
    "\002(\0162\036.UpdateSystemMatrix.UpdateType\" \n\nM"
    "atrixType\022\010\n\004HEAD\020\000\022\010\n\004BODY\020\001\"#\n\nUpdateT"
    "ype\022\014\n\010MULTIPLY\020\000\022\007\n\003SET\020\001\"-\n\rDestroyObj"
    "ect\022\020\n\010scene_id\030\001 \002(\005\022\n\n\002id\030\002 \002(\005", 1153);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vroom.proto", &protobuf_RegisterTypes);
  Reply::default_instance_ = new Reply();
  CreateScene::default_instance_ = new CreateScene();
  DestroyScene::default_instance_ = new DestroyScene();
  CreateMemory::default_instance_ = new CreateMemory();
  CreateDataObject::default_instance_ = new CreateDataObject();
  CreateTextureObject::default_instance_ = new CreateTextureObject();
  RunProgram::default_instance_ = new RunProgram();
  SetSkybox::default_instance_ = new SetSkybox();
  UpdateSystemMatrix::default_instance_ = new UpdateSystemMatrix();
  DestroyObject::default_instance_ = new DestroyObject();
  Reply::default_instance_->InitAsDefaultInstance();
  CreateScene::default_instance_->InitAsDefaultInstance();
  DestroyScene::default_instance_->InitAsDefaultInstance();
  CreateMemory::default_instance_->InitAsDefaultInstance();
  CreateDataObject::default_instance_->InitAsDefaultInstance();
  CreateTextureObject::default_instance_->InitAsDefaultInstance();
  RunProgram::default_instance_->InitAsDefaultInstance();
  SetSkybox::default_instance_->InitAsDefaultInstance();
  UpdateSystemMatrix::default_instance_->InitAsDefaultInstance();
  DestroyObject::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_vroom_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_vroom_2eproto {
  StaticDescriptorInitializer_vroom_2eproto() {
    protobuf_AddDesc_vroom_2eproto();
  }
} static_descriptor_initializer_vroom_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reply::kIdFieldNumber;
const int Reply::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reply::Reply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Reply)
}

void Reply::InitAsDefaultInstance() {
}

Reply::Reply(const Reply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Reply)
}

void Reply::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  error_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Reply::~Reply() {
  // @@protoc_insertion_point(destructor:Reply)
  SharedDtor();
}

void Reply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Reply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Reply_descriptor_;
}

const Reply& Reply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vroom_2eproto();
  return *default_instance_;
}

Reply* Reply::default_instance_ = NULL;

Reply* Reply::New(::google::protobuf::Arena* arena) const {
  Reply* n = new Reply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Reply::Clear() {
// @@protoc_insertion_point(message_clear_start:Reply)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Reply, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Reply*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, error_code_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Reply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error_code;
        break;
      }

      // required int32 error_code = 2;
      case 2: {
        if (tag == 16) {
         parse_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Reply)
  return false;
#undef DO_
}

void Reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Reply)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 error_code = 2;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Reply)
}

::google::protobuf::uint8* Reply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Reply)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 error_code = 2;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Reply)
  return target;
}

int Reply::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Reply)
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_error_code()) {
    // required int32 error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  return total_size;
}
int Reply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Reply)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Reply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Reply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Reply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Reply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Reply)
    MergeFrom(*source);
  }
}

void Reply::MergeFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Reply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Reply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reply::CopyFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Reply::Swap(Reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reply::InternalSwap(Reply* other) {
  std::swap(id_, other->id_);
  std::swap(error_code_, other->error_code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Reply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Reply_descriptor_;
  metadata.reflection = Reply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Reply

// required int32 id = 1;
bool Reply::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Reply::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Reply::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Reply::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 Reply::id() const {
  // @@protoc_insertion_point(field_get:Reply.id)
  return id_;
}
 void Reply::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Reply.id)
}

// required int32 error_code = 2;
bool Reply::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Reply::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
void Reply::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
void Reply::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
 ::google::protobuf::int32 Reply::error_code() const {
  // @@protoc_insertion_point(field_get:Reply.error_code)
  return error_code_;
}
 void Reply::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:Reply.error_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateScene::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateScene::CreateScene()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateScene)
}

void CreateScene::InitAsDefaultInstance() {
}

CreateScene::CreateScene(const CreateScene& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CreateScene)
}

void CreateScene::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateScene::~CreateScene() {
  // @@protoc_insertion_point(destructor:CreateScene)
  SharedDtor();
}

void CreateScene::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CreateScene::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateScene::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateScene_descriptor_;
}

const CreateScene& CreateScene::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vroom_2eproto();
  return *default_instance_;
}

CreateScene* CreateScene::default_instance_ = NULL;

CreateScene* CreateScene::New(::google::protobuf::Arena* arena) const {
  CreateScene* n = new CreateScene;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateScene::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateScene)
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateScene::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateScene)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CreateScene.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateScene)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateScene)
  return false;
#undef DO_
}

void CreateScene::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateScene)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateScene.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateScene)
}

::google::protobuf::uint8* CreateScene::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateScene)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateScene.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateScene)
  return target;
}

int CreateScene::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CreateScene)
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateScene::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateScene)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateScene* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateScene>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateScene)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateScene)
    MergeFrom(*source);
  }
}

void CreateScene::MergeFrom(const CreateScene& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateScene)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CreateScene::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateScene::CopyFrom(const CreateScene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateScene::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateScene::Swap(CreateScene* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateScene::InternalSwap(CreateScene* other) {
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateScene::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateScene_descriptor_;
  metadata.reflection = CreateScene_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateScene

// required string name = 1;
bool CreateScene::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateScene::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateScene::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateScene::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CreateScene::name() const {
  // @@protoc_insertion_point(field_get:CreateScene.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateScene::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateScene.name)
}
 void CreateScene::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateScene.name)
}
 void CreateScene::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateScene.name)
}
 ::std::string* CreateScene::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CreateScene.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateScene::release_name() {
  // @@protoc_insertion_point(field_release:CreateScene.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateScene::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CreateScene.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroyScene::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroyScene::DestroyScene()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DestroyScene)
}

void DestroyScene::InitAsDefaultInstance() {
}

DestroyScene::DestroyScene(const DestroyScene& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DestroyScene)
}

void DestroyScene::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DestroyScene::~DestroyScene() {
  // @@protoc_insertion_point(destructor:DestroyScene)
  SharedDtor();
}

void DestroyScene::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DestroyScene::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyScene::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyScene_descriptor_;
}

const DestroyScene& DestroyScene::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vroom_2eproto();
  return *default_instance_;
}

DestroyScene* DestroyScene::default_instance_ = NULL;

DestroyScene* DestroyScene::New(::google::protobuf::Arena* arena) const {
  DestroyScene* n = new DestroyScene;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroyScene::Clear() {
// @@protoc_insertion_point(message_clear_start:DestroyScene)
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DestroyScene::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DestroyScene)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DestroyScene)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DestroyScene)
  return false;
#undef DO_
}

void DestroyScene::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DestroyScene)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DestroyScene)
}

::google::protobuf::uint8* DestroyScene::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DestroyScene)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DestroyScene)
  return target;
}

int DestroyScene::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DestroyScene)
  int total_size = 0;

  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestroyScene::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DestroyScene)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DestroyScene* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DestroyScene>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DestroyScene)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DestroyScene)
    MergeFrom(*source);
  }
}

void DestroyScene::MergeFrom(const DestroyScene& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DestroyScene)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DestroyScene::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DestroyScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestroyScene::CopyFrom(const DestroyScene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DestroyScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyScene::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DestroyScene::Swap(DestroyScene* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroyScene::InternalSwap(DestroyScene* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DestroyScene::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyScene_descriptor_;
  metadata.reflection = DestroyScene_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DestroyScene

// required int32 id = 1;
bool DestroyScene::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DestroyScene::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void DestroyScene::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void DestroyScene::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 DestroyScene::id() const {
  // @@protoc_insertion_point(field_get:DestroyScene.id)
  return id_;
}
 void DestroyScene::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:DestroyScene.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateMemory::kSceneIdFieldNumber;
const int CreateMemory::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateMemory::CreateMemory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateMemory)
}

void CreateMemory::InitAsDefaultInstance() {
}

CreateMemory::CreateMemory(const CreateMemory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CreateMemory)
}

void CreateMemory::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateMemory::~CreateMemory() {
  // @@protoc_insertion_point(destructor:CreateMemory)
  SharedDtor();
}

void CreateMemory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateMemory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateMemory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateMemory_descriptor_;
}

const CreateMemory& CreateMemory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vroom_2eproto();
  return *default_instance_;
}

CreateMemory* CreateMemory::default_instance_ = NULL;

CreateMemory* CreateMemory::New(::google::protobuf::Arena* arena) const {
  CreateMemory* n = new CreateMemory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateMemory::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateMemory)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateMemory, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateMemory*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(scene_id_, size_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateMemory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateMemory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 scene_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // required int32 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateMemory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateMemory)
  return false;
#undef DO_
}

void CreateMemory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateMemory)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }

  // required int32 size = 2;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateMemory)
}

::google::protobuf::uint8* CreateMemory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateMemory)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }

  // required int32 size = 2;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateMemory)
  return target;
}

int CreateMemory::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CreateMemory)
  int total_size = 0;

  if (has_scene_id()) {
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());
  }

  if (has_size()) {
    // required int32 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  return total_size;
}
int CreateMemory::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CreateMemory)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());

    // required int32 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateMemory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateMemory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateMemory* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateMemory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateMemory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateMemory)
    MergeFrom(*source);
  }
}

void CreateMemory::MergeFrom(const CreateMemory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateMemory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_size()) {
      set_size(from.size());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CreateMemory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateMemory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMemory::CopyFrom(const CreateMemory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateMemory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMemory::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CreateMemory::Swap(CreateMemory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateMemory::InternalSwap(CreateMemory* other) {
  std::swap(scene_id_, other->scene_id_);
  std::swap(size_, other->size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateMemory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateMemory_descriptor_;
  metadata.reflection = CreateMemory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateMemory

// required int32 scene_id = 1;
bool CreateMemory::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateMemory::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateMemory::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateMemory::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
 ::google::protobuf::int32 CreateMemory::scene_id() const {
  // @@protoc_insertion_point(field_get:CreateMemory.scene_id)
  return scene_id_;
}
 void CreateMemory::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:CreateMemory.scene_id)
}

// required int32 size = 2;
bool CreateMemory::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateMemory::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateMemory::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateMemory::clear_size() {
  size_ = 0;
  clear_has_size();
}
 ::google::protobuf::int32 CreateMemory::size() const {
  // @@protoc_insertion_point(field_get:CreateMemory.size)
  return size_;
}
 void CreateMemory::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:CreateMemory.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CreateDataObject_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateDataObject_Type_descriptor_;
}
bool CreateDataObject_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreateDataObject_Type CreateDataObject::UINT8;
const CreateDataObject_Type CreateDataObject::UINT16;
const CreateDataObject_Type CreateDataObject::UINT32;
const CreateDataObject_Type CreateDataObject::FLOAT;
const CreateDataObject_Type CreateDataObject::VEC2;
const CreateDataObject_Type CreateDataObject::VEC3;
const CreateDataObject_Type CreateDataObject::VEC4;
const CreateDataObject_Type CreateDataObject::MAT2;
const CreateDataObject_Type CreateDataObject::MAT3;
const CreateDataObject_Type CreateDataObject::MAT4;
const CreateDataObject_Type CreateDataObject::Type_MIN;
const CreateDataObject_Type CreateDataObject::Type_MAX;
const int CreateDataObject::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateDataObject::kSceneIdFieldNumber;
const int CreateDataObject::kMemoryIdFieldNumber;
const int CreateDataObject::kMemoryOffsetFieldNumber;
const int CreateDataObject::kMemoryLengthFieldNumber;
const int CreateDataObject::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateDataObject::CreateDataObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateDataObject)
}

void CreateDataObject::InitAsDefaultInstance() {
}

CreateDataObject::CreateDataObject(const CreateDataObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CreateDataObject)
}

void CreateDataObject::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  memory_id_ = 0;
  memory_offset_ = 0;
  memory_length_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateDataObject::~CreateDataObject() {
  // @@protoc_insertion_point(destructor:CreateDataObject)
  SharedDtor();
}

void CreateDataObject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateDataObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateDataObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateDataObject_descriptor_;
}

const CreateDataObject& CreateDataObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vroom_2eproto();
  return *default_instance_;
}

CreateDataObject* CreateDataObject::default_instance_ = NULL;

CreateDataObject* CreateDataObject::New(::google::protobuf::Arena* arena) const {
  CreateDataObject* n = new CreateDataObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateDataObject::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateDataObject)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateDataObject, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateDataObject*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(scene_id_, type_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateDataObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateDataObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 scene_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_memory_id;
        break;
      }

      // required int32 memory_id = 2;
      case 2: {
        if (tag == 16) {
         parse_memory_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memory_id_)));
          set_has_memory_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_memory_offset;
        break;
      }

      // required int32 memory_offset = 3;
      case 3: {
        if (tag == 24) {
         parse_memory_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memory_offset_)));
          set_has_memory_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_memory_length;
        break;
      }

      // required int32 memory_length = 4;
      case 4: {
        if (tag == 32) {
         parse_memory_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memory_length_)));
          set_has_memory_length();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // required .CreateDataObject.Type type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CreateDataObject_Type_IsValid(value)) {
            set_type(static_cast< ::CreateDataObject_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateDataObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateDataObject)
  return false;
#undef DO_
}

void CreateDataObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateDataObject)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }

  // required int32 memory_id = 2;
  if (has_memory_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->memory_id(), output);
  }

  // required int32 memory_offset = 3;
  if (has_memory_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->memory_offset(), output);
  }

  // required int32 memory_length = 4;
  if (has_memory_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->memory_length(), output);
  }

  // required .CreateDataObject.Type type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateDataObject)
}

::google::protobuf::uint8* CreateDataObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateDataObject)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }

  // required int32 memory_id = 2;
  if (has_memory_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->memory_id(), target);
  }

  // required int32 memory_offset = 3;
  if (has_memory_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->memory_offset(), target);
  }

  // required int32 memory_length = 4;
  if (has_memory_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->memory_length(), target);
  }

  // required .CreateDataObject.Type type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateDataObject)
  return target;
}

int CreateDataObject::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CreateDataObject)
  int total_size = 0;

  if (has_scene_id()) {
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());
  }

  if (has_memory_id()) {
    // required int32 memory_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memory_id());
  }

  if (has_memory_offset()) {
    // required int32 memory_offset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memory_offset());
  }

  if (has_memory_length()) {
    // required int32 memory_length = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memory_length());
  }

  if (has_type()) {
    // required .CreateDataObject.Type type = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
int CreateDataObject::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CreateDataObject)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());

    // required int32 memory_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memory_id());

    // required int32 memory_offset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memory_offset());

    // required int32 memory_length = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memory_length());

    // required .CreateDataObject.Type type = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateDataObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateDataObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateDataObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateDataObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateDataObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateDataObject)
    MergeFrom(*source);
  }
}

void CreateDataObject::MergeFrom(const CreateDataObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateDataObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_memory_id()) {
      set_memory_id(from.memory_id());
    }
    if (from.has_memory_offset()) {
      set_memory_offset(from.memory_offset());
    }
    if (from.has_memory_length()) {
      set_memory_length(from.memory_length());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CreateDataObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateDataObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDataObject::CopyFrom(const CreateDataObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateDataObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDataObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void CreateDataObject::Swap(CreateDataObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateDataObject::InternalSwap(CreateDataObject* other) {
  std::swap(scene_id_, other->scene_id_);
  std::swap(memory_id_, other->memory_id_);
  std::swap(memory_offset_, other->memory_offset_);
  std::swap(memory_length_, other->memory_length_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateDataObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateDataObject_descriptor_;
  metadata.reflection = CreateDataObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateDataObject

// required int32 scene_id = 1;
bool CreateDataObject::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateDataObject::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateDataObject::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateDataObject::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
 ::google::protobuf::int32 CreateDataObject::scene_id() const {
  // @@protoc_insertion_point(field_get:CreateDataObject.scene_id)
  return scene_id_;
}
 void CreateDataObject::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:CreateDataObject.scene_id)
}

// required int32 memory_id = 2;
bool CreateDataObject::has_memory_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateDataObject::set_has_memory_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateDataObject::clear_has_memory_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateDataObject::clear_memory_id() {
  memory_id_ = 0;
  clear_has_memory_id();
}
 ::google::protobuf::int32 CreateDataObject::memory_id() const {
  // @@protoc_insertion_point(field_get:CreateDataObject.memory_id)
  return memory_id_;
}
 void CreateDataObject::set_memory_id(::google::protobuf::int32 value) {
  set_has_memory_id();
  memory_id_ = value;
  // @@protoc_insertion_point(field_set:CreateDataObject.memory_id)
}

// required int32 memory_offset = 3;
bool CreateDataObject::has_memory_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreateDataObject::set_has_memory_offset() {
  _has_bits_[0] |= 0x00000004u;
}
void CreateDataObject::clear_has_memory_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreateDataObject::clear_memory_offset() {
  memory_offset_ = 0;
  clear_has_memory_offset();
}
 ::google::protobuf::int32 CreateDataObject::memory_offset() const {
  // @@protoc_insertion_point(field_get:CreateDataObject.memory_offset)
  return memory_offset_;
}
 void CreateDataObject::set_memory_offset(::google::protobuf::int32 value) {
  set_has_memory_offset();
  memory_offset_ = value;
  // @@protoc_insertion_point(field_set:CreateDataObject.memory_offset)
}

// required int32 memory_length = 4;
bool CreateDataObject::has_memory_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CreateDataObject::set_has_memory_length() {
  _has_bits_[0] |= 0x00000008u;
}
void CreateDataObject::clear_has_memory_length() {
  _has_bits_[0] &= ~0x00000008u;
}
void CreateDataObject::clear_memory_length() {
  memory_length_ = 0;
  clear_has_memory_length();
}
 ::google::protobuf::int32 CreateDataObject::memory_length() const {
  // @@protoc_insertion_point(field_get:CreateDataObject.memory_length)
  return memory_length_;
}
 void CreateDataObject::set_memory_length(::google::protobuf::int32 value) {
  set_has_memory_length();
  memory_length_ = value;
  // @@protoc_insertion_point(field_set:CreateDataObject.memory_length)
}

// required .CreateDataObject.Type type = 5;
bool CreateDataObject::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CreateDataObject::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
void CreateDataObject::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void CreateDataObject::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::CreateDataObject_Type CreateDataObject::type() const {
  // @@protoc_insertion_point(field_get:CreateDataObject.type)
  return static_cast< ::CreateDataObject_Type >(type_);
}
 void CreateDataObject::set_type(::CreateDataObject_Type value) {
  assert(::CreateDataObject_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CreateDataObject.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CreateTextureObject_Format_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTextureObject_Format_descriptor_;
}
bool CreateTextureObject_Format_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreateTextureObject_Format CreateTextureObject::BGR888;
const CreateTextureObject_Format CreateTextureObject::XBGR8888;
const CreateTextureObject_Format CreateTextureObject::ABGR8888;
const CreateTextureObject_Format CreateTextureObject::RGB888;
const CreateTextureObject_Format CreateTextureObject::XRGB8888;
const CreateTextureObject_Format CreateTextureObject::ARGB8888;
const CreateTextureObject_Format CreateTextureObject::Format_MIN;
const CreateTextureObject_Format CreateTextureObject::Format_MAX;
const int CreateTextureObject::Format_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CreateTextureObject_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTextureObject_Type_descriptor_;
}
bool CreateTextureObject_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreateTextureObject_Type CreateTextureObject::TEXTURE_2D;
const CreateTextureObject_Type CreateTextureObject::TEXTURE_CUBE_MAP;
const CreateTextureObject_Type CreateTextureObject::Type_MIN;
const CreateTextureObject_Type CreateTextureObject::Type_MAX;
const int CreateTextureObject::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTextureObject::kSceneIdFieldNumber;
const int CreateTextureObject::kDataIdFieldNumber;
const int CreateTextureObject::kWidthFieldNumber;
const int CreateTextureObject::kHeightFieldNumber;
const int CreateTextureObject::kFormatFieldNumber;
const int CreateTextureObject::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTextureObject::CreateTextureObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateTextureObject)
}

void CreateTextureObject::InitAsDefaultInstance() {
}

CreateTextureObject::CreateTextureObject(const CreateTextureObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CreateTextureObject)
}

void CreateTextureObject::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  data_id_ = 0;
  width_ = 0;
  height_ = 0;
  format_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateTextureObject::~CreateTextureObject() {
  // @@protoc_insertion_point(destructor:CreateTextureObject)
  SharedDtor();
}

void CreateTextureObject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateTextureObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTextureObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTextureObject_descriptor_;
}

const CreateTextureObject& CreateTextureObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vroom_2eproto();
  return *default_instance_;
}

CreateTextureObject* CreateTextureObject::default_instance_ = NULL;

CreateTextureObject* CreateTextureObject::New(::google::protobuf::Arena* arena) const {
  CreateTextureObject* n = new CreateTextureObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateTextureObject::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateTextureObject)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateTextureObject, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateTextureObject*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(scene_id_, type_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateTextureObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateTextureObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 scene_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_data_id;
        break;
      }

      // required int32 data_id = 2;
      case 2: {
        if (tag == 16) {
         parse_data_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_id_)));
          set_has_data_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_width;
        break;
      }

      // required int32 width = 3;
      case 3: {
        if (tag == 24) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_height;
        break;
      }

      // required int32 height = 4;
      case 4: {
        if (tag == 32) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_format;
        break;
      }

      // required .CreateTextureObject.Format format = 5;
      case 5: {
        if (tag == 40) {
         parse_format:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CreateTextureObject_Format_IsValid(value)) {
            set_format(static_cast< ::CreateTextureObject_Format >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }

      // required .CreateTextureObject.Type type = 6;
      case 6: {
        if (tag == 48) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CreateTextureObject_Type_IsValid(value)) {
            set_type(static_cast< ::CreateTextureObject_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateTextureObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateTextureObject)
  return false;
#undef DO_
}

void CreateTextureObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateTextureObject)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }

  // required int32 data_id = 2;
  if (has_data_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data_id(), output);
  }

  // required int32 width = 3;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }

  // required int32 height = 4;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->height(), output);
  }

  // required .CreateTextureObject.Format format = 5;
  if (has_format()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->format(), output);
  }

  // required .CreateTextureObject.Type type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateTextureObject)
}

::google::protobuf::uint8* CreateTextureObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateTextureObject)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }

  // required int32 data_id = 2;
  if (has_data_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data_id(), target);
  }

  // required int32 width = 3;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }

  // required int32 height = 4;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->height(), target);
  }

  // required .CreateTextureObject.Format format = 5;
  if (has_format()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->format(), target);
  }

  // required .CreateTextureObject.Type type = 6;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateTextureObject)
  return target;
}

int CreateTextureObject::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CreateTextureObject)
  int total_size = 0;

  if (has_scene_id()) {
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());
  }

  if (has_data_id()) {
    // required int32 data_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_id());
  }

  if (has_width()) {
    // required int32 width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  if (has_height()) {
    // required int32 height = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  if (has_format()) {
    // required .CreateTextureObject.Format format = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
  }

  if (has_type()) {
    // required .CreateTextureObject.Type type = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
int CreateTextureObject::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CreateTextureObject)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());

    // required int32 data_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_id());

    // required int32 width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());

    // required int32 height = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());

    // required .CreateTextureObject.Format format = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());

    // required .CreateTextureObject.Type type = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTextureObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateTextureObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateTextureObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTextureObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateTextureObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateTextureObject)
    MergeFrom(*source);
  }
}

void CreateTextureObject::MergeFrom(const CreateTextureObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateTextureObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_data_id()) {
      set_data_id(from.data_id());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_format()) {
      set_format(from.format());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CreateTextureObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateTextureObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTextureObject::CopyFrom(const CreateTextureObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateTextureObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTextureObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void CreateTextureObject::Swap(CreateTextureObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTextureObject::InternalSwap(CreateTextureObject* other) {
  std::swap(scene_id_, other->scene_id_);
  std::swap(data_id_, other->data_id_);
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  std::swap(format_, other->format_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateTextureObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateTextureObject_descriptor_;
  metadata.reflection = CreateTextureObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateTextureObject

// required int32 scene_id = 1;
bool CreateTextureObject::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateTextureObject::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateTextureObject::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateTextureObject::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
 ::google::protobuf::int32 CreateTextureObject::scene_id() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.scene_id)
  return scene_id_;
}
 void CreateTextureObject::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.scene_id)
}

// required int32 data_id = 2;
bool CreateTextureObject::has_data_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateTextureObject::set_has_data_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateTextureObject::clear_has_data_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateTextureObject::clear_data_id() {
  data_id_ = 0;
  clear_has_data_id();
}
 ::google::protobuf::int32 CreateTextureObject::data_id() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.data_id)
  return data_id_;
}
 void CreateTextureObject::set_data_id(::google::protobuf::int32 value) {
  set_has_data_id();
  data_id_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.data_id)
}

// required int32 width = 3;
bool CreateTextureObject::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreateTextureObject::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
void CreateTextureObject::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreateTextureObject::clear_width() {
  width_ = 0;
  clear_has_width();
}
 ::google::protobuf::int32 CreateTextureObject::width() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.width)
  return width_;
}
 void CreateTextureObject::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.width)
}

// required int32 height = 4;
bool CreateTextureObject::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CreateTextureObject::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
void CreateTextureObject::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
void CreateTextureObject::clear_height() {
  height_ = 0;
  clear_has_height();
}
 ::google::protobuf::int32 CreateTextureObject::height() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.height)
  return height_;
}
 void CreateTextureObject::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.height)
}

// required .CreateTextureObject.Format format = 5;
bool CreateTextureObject::has_format() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CreateTextureObject::set_has_format() {
  _has_bits_[0] |= 0x00000010u;
}
void CreateTextureObject::clear_has_format() {
  _has_bits_[0] &= ~0x00000010u;
}
void CreateTextureObject::clear_format() {
  format_ = 0;
  clear_has_format();
}
 ::CreateTextureObject_Format CreateTextureObject::format() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.format)
  return static_cast< ::CreateTextureObject_Format >(format_);
}
 void CreateTextureObject::set_format(::CreateTextureObject_Format value) {
  assert(::CreateTextureObject_Format_IsValid(value));
  set_has_format();
  format_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.format)
}

// required .CreateTextureObject.Type type = 6;
bool CreateTextureObject::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CreateTextureObject::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
void CreateTextureObject::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void CreateTextureObject::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::CreateTextureObject_Type CreateTextureObject::type() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.type)
  return static_cast< ::CreateTextureObject_Type >(type_);
}
 void CreateTextureObject::set_type(::CreateTextureObject_Type value) {
  assert(::CreateTextureObject_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunProgram::kSceneIdFieldNumber;
const int RunProgram::kProgramIdFieldNumber;
const int RunProgram::kRegisterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunProgram::RunProgram()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RunProgram)
}

void RunProgram::InitAsDefaultInstance() {
}

RunProgram::RunProgram(const RunProgram& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RunProgram)
}

void RunProgram::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  program_id_ = 0;
  register_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RunProgram::~RunProgram() {
  // @@protoc_insertion_point(destructor:RunProgram)
  SharedDtor();
}

void RunProgram::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RunProgram::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunProgram::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RunProgram_descriptor_;
}

const RunProgram& RunProgram::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vroom_2eproto();
  return *default_instance_;
}

RunProgram* RunProgram::default_instance_ = NULL;

RunProgram* RunProgram::New(::google::protobuf::Arena* arena) const {
  RunProgram* n = new RunProgram;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunProgram::Clear() {
// @@protoc_insertion_point(message_clear_start:RunProgram)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RunProgram, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RunProgram*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(scene_id_, register_id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RunProgram::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RunProgram)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 scene_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_program_id;
        break;
      }

      // required int32 program_id = 2;
      case 2: {
        if (tag == 16) {
         parse_program_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &program_id_)));
          set_has_program_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_register_id;
        break;
      }

      // required int32 register_id = 3;
      case 3: {
        if (tag == 24) {
         parse_register_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &register_id_)));
          set_has_register_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RunProgram)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RunProgram)
  return false;
#undef DO_
}

void RunProgram::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RunProgram)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }

  // required int32 program_id = 2;
  if (has_program_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->program_id(), output);
  }

  // required int32 register_id = 3;
  if (has_register_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->register_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RunProgram)
}

::google::protobuf::uint8* RunProgram::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RunProgram)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }

  // required int32 program_id = 2;
  if (has_program_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->program_id(), target);
  }

  // required int32 register_id = 3;
  if (has_register_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->register_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RunProgram)
  return target;
}

int RunProgram::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RunProgram)
  int total_size = 0;

  if (has_scene_id()) {
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());
  }

  if (has_program_id()) {
    // required int32 program_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->program_id());
  }

  if (has_register_id()) {
    // required int32 register_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->register_id());
  }

  return total_size;
}
int RunProgram::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RunProgram)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());

    // required int32 program_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->program_id());

    // required int32 register_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->register_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunProgram::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RunProgram)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RunProgram* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RunProgram>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RunProgram)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RunProgram)
    MergeFrom(*source);
  }
}

void RunProgram::MergeFrom(const RunProgram& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RunProgram)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_program_id()) {
      set_program_id(from.program_id());
    }
    if (from.has_register_id()) {
      set_register_id(from.register_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RunProgram::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RunProgram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunProgram::CopyFrom(const RunProgram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RunProgram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunProgram::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void RunProgram::Swap(RunProgram* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunProgram::InternalSwap(RunProgram* other) {
  std::swap(scene_id_, other->scene_id_);
  std::swap(program_id_, other->program_id_);
  std::swap(register_id_, other->register_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunProgram::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RunProgram_descriptor_;
  metadata.reflection = RunProgram_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RunProgram

// required int32 scene_id = 1;
bool RunProgram::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RunProgram::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RunProgram::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RunProgram::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
 ::google::protobuf::int32 RunProgram::scene_id() const {
  // @@protoc_insertion_point(field_get:RunProgram.scene_id)
  return scene_id_;
}
 void RunProgram::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:RunProgram.scene_id)
}

// required int32 program_id = 2;
bool RunProgram::has_program_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RunProgram::set_has_program_id() {
  _has_bits_[0] |= 0x00000002u;
}
void RunProgram::clear_has_program_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void RunProgram::clear_program_id() {
  program_id_ = 0;
  clear_has_program_id();
}
 ::google::protobuf::int32 RunProgram::program_id() const {
  // @@protoc_insertion_point(field_get:RunProgram.program_id)
  return program_id_;
}
 void RunProgram::set_program_id(::google::protobuf::int32 value) {
  set_has_program_id();
  program_id_ = value;
  // @@protoc_insertion_point(field_set:RunProgram.program_id)
}

// required int32 register_id = 3;
bool RunProgram::has_register_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RunProgram::set_has_register_id() {
  _has_bits_[0] |= 0x00000004u;
}
void RunProgram::clear_has_register_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void RunProgram::clear_register_id() {
  register_id_ = 0;
  clear_has_register_id();
}
 ::google::protobuf::int32 RunProgram::register_id() const {
  // @@protoc_insertion_point(field_get:RunProgram.register_id)
  return register_id_;
}
 void RunProgram::set_register_id(::google::protobuf::int32 value) {
  set_has_register_id();
  register_id_ = value;
  // @@protoc_insertion_point(field_set:RunProgram.register_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSkybox::kSceneIdFieldNumber;
const int SetSkybox::kTextureIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSkybox::SetSkybox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetSkybox)
}

void SetSkybox::InitAsDefaultInstance() {
}

SetSkybox::SetSkybox(const SetSkybox& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetSkybox)
}

void SetSkybox::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  texture_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetSkybox::~SetSkybox() {
  // @@protoc_insertion_point(destructor:SetSkybox)
  SharedDtor();
}

void SetSkybox::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetSkybox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSkybox::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetSkybox_descriptor_;
}

const SetSkybox& SetSkybox::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vroom_2eproto();
  return *default_instance_;
}

SetSkybox* SetSkybox::default_instance_ = NULL;

SetSkybox* SetSkybox::New(::google::protobuf::Arena* arena) const {
  SetSkybox* n = new SetSkybox;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSkybox::Clear() {
// @@protoc_insertion_point(message_clear_start:SetSkybox)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SetSkybox, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SetSkybox*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(scene_id_, texture_id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SetSkybox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetSkybox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 scene_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_texture_id;
        break;
      }

      // required int32 texture_id = 2;
      case 2: {
        if (tag == 16) {
         parse_texture_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &texture_id_)));
          set_has_texture_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetSkybox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetSkybox)
  return false;
#undef DO_
}

void SetSkybox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetSkybox)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }

  // required int32 texture_id = 2;
  if (has_texture_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->texture_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SetSkybox)
}

::google::protobuf::uint8* SetSkybox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SetSkybox)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }

  // required int32 texture_id = 2;
  if (has_texture_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->texture_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetSkybox)
  return target;
}

int SetSkybox::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:SetSkybox)
  int total_size = 0;

  if (has_scene_id()) {
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());
  }

  if (has_texture_id()) {
    // required int32 texture_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->texture_id());
  }

  return total_size;
}
int SetSkybox::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetSkybox)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());

    // required int32 texture_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->texture_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSkybox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetSkybox)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetSkybox* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSkybox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetSkybox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetSkybox)
    MergeFrom(*source);
  }
}

void SetSkybox::MergeFrom(const SetSkybox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetSkybox)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_texture_id()) {
      set_texture_id(from.texture_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SetSkybox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetSkybox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSkybox::CopyFrom(const SetSkybox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetSkybox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSkybox::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SetSkybox::Swap(SetSkybox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSkybox::InternalSwap(SetSkybox* other) {
  std::swap(scene_id_, other->scene_id_);
  std::swap(texture_id_, other->texture_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetSkybox::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetSkybox_descriptor_;
  metadata.reflection = SetSkybox_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetSkybox

// required int32 scene_id = 1;
bool SetSkybox::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetSkybox::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SetSkybox::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetSkybox::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
 ::google::protobuf::int32 SetSkybox::scene_id() const {
  // @@protoc_insertion_point(field_get:SetSkybox.scene_id)
  return scene_id_;
}
 void SetSkybox::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:SetSkybox.scene_id)
}

// required int32 texture_id = 2;
bool SetSkybox::has_texture_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetSkybox::set_has_texture_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SetSkybox::clear_has_texture_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetSkybox::clear_texture_id() {
  texture_id_ = 0;
  clear_has_texture_id();
}
 ::google::protobuf::int32 SetSkybox::texture_id() const {
  // @@protoc_insertion_point(field_get:SetSkybox.texture_id)
  return texture_id_;
}
 void SetSkybox::set_texture_id(::google::protobuf::int32 value) {
  set_has_texture_id();
  texture_id_ = value;
  // @@protoc_insertion_point(field_set:SetSkybox.texture_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* UpdateSystemMatrix_MatrixType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSystemMatrix_MatrixType_descriptor_;
}
bool UpdateSystemMatrix_MatrixType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UpdateSystemMatrix_MatrixType UpdateSystemMatrix::HEAD;
const UpdateSystemMatrix_MatrixType UpdateSystemMatrix::BODY;
const UpdateSystemMatrix_MatrixType UpdateSystemMatrix::MatrixType_MIN;
const UpdateSystemMatrix_MatrixType UpdateSystemMatrix::MatrixType_MAX;
const int UpdateSystemMatrix::MatrixType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UpdateSystemMatrix_UpdateType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSystemMatrix_UpdateType_descriptor_;
}
bool UpdateSystemMatrix_UpdateType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UpdateSystemMatrix_UpdateType UpdateSystemMatrix::MULTIPLY;
const UpdateSystemMatrix_UpdateType UpdateSystemMatrix::SET;
const UpdateSystemMatrix_UpdateType UpdateSystemMatrix::UpdateType_MIN;
const UpdateSystemMatrix_UpdateType UpdateSystemMatrix::UpdateType_MAX;
const int UpdateSystemMatrix::UpdateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateSystemMatrix::kSceneIdFieldNumber;
const int UpdateSystemMatrix::kDataIdFieldNumber;
const int UpdateSystemMatrix::kDataIndexFieldNumber;
const int UpdateSystemMatrix::kMatrixTypeFieldNumber;
const int UpdateSystemMatrix::kUpdateTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateSystemMatrix::UpdateSystemMatrix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateSystemMatrix)
}

void UpdateSystemMatrix::InitAsDefaultInstance() {
}

UpdateSystemMatrix::UpdateSystemMatrix(const UpdateSystemMatrix& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UpdateSystemMatrix)
}

void UpdateSystemMatrix::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  data_id_ = 0;
  data_index_ = 0;
  matrix_type_ = 0;
  update_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateSystemMatrix::~UpdateSystemMatrix() {
  // @@protoc_insertion_point(destructor:UpdateSystemMatrix)
  SharedDtor();
}

void UpdateSystemMatrix::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateSystemMatrix::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSystemMatrix::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSystemMatrix_descriptor_;
}

const UpdateSystemMatrix& UpdateSystemMatrix::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vroom_2eproto();
  return *default_instance_;
}

UpdateSystemMatrix* UpdateSystemMatrix::default_instance_ = NULL;

UpdateSystemMatrix* UpdateSystemMatrix::New(::google::protobuf::Arena* arena) const {
  UpdateSystemMatrix* n = new UpdateSystemMatrix;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateSystemMatrix::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateSystemMatrix)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UpdateSystemMatrix, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UpdateSystemMatrix*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(scene_id_, update_type_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpdateSystemMatrix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateSystemMatrix)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 scene_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_data_id;
        break;
      }

      // required int32 data_id = 2;
      case 2: {
        if (tag == 16) {
         parse_data_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_id_)));
          set_has_data_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_data_index;
        break;
      }

      // required int32 data_index = 3;
      case 3: {
        if (tag == 24) {
         parse_data_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_index_)));
          set_has_data_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_matrix_type;
        break;
      }

      // required .UpdateSystemMatrix.MatrixType matrix_type = 4;
      case 4: {
        if (tag == 32) {
         parse_matrix_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::UpdateSystemMatrix_MatrixType_IsValid(value)) {
            set_matrix_type(static_cast< ::UpdateSystemMatrix_MatrixType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_update_type;
        break;
      }

      // required .UpdateSystemMatrix.UpdateType update_type = 5;
      case 5: {
        if (tag == 40) {
         parse_update_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::UpdateSystemMatrix_UpdateType_IsValid(value)) {
            set_update_type(static_cast< ::UpdateSystemMatrix_UpdateType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateSystemMatrix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateSystemMatrix)
  return false;
#undef DO_
}

void UpdateSystemMatrix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateSystemMatrix)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }

  // required int32 data_id = 2;
  if (has_data_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data_id(), output);
  }

  // required int32 data_index = 3;
  if (has_data_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->data_index(), output);
  }

  // required .UpdateSystemMatrix.MatrixType matrix_type = 4;
  if (has_matrix_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->matrix_type(), output);
  }

  // required .UpdateSystemMatrix.UpdateType update_type = 5;
  if (has_update_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->update_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateSystemMatrix)
}

::google::protobuf::uint8* UpdateSystemMatrix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UpdateSystemMatrix)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }

  // required int32 data_id = 2;
  if (has_data_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data_id(), target);
  }

  // required int32 data_index = 3;
  if (has_data_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->data_index(), target);
  }

  // required .UpdateSystemMatrix.MatrixType matrix_type = 4;
  if (has_matrix_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->matrix_type(), target);
  }

  // required .UpdateSystemMatrix.UpdateType update_type = 5;
  if (has_update_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->update_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateSystemMatrix)
  return target;
}

int UpdateSystemMatrix::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UpdateSystemMatrix)
  int total_size = 0;

  if (has_scene_id()) {
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());
  }

  if (has_data_id()) {
    // required int32 data_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_id());
  }

  if (has_data_index()) {
    // required int32 data_index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_index());
  }

  if (has_matrix_type()) {
    // required .UpdateSystemMatrix.MatrixType matrix_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->matrix_type());
  }

  if (has_update_type()) {
    // required .UpdateSystemMatrix.UpdateType update_type = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->update_type());
  }

  return total_size;
}
int UpdateSystemMatrix::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateSystemMatrix)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());

    // required int32 data_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_id());

    // required int32 data_index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_index());

    // required .UpdateSystemMatrix.MatrixType matrix_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->matrix_type());

    // required .UpdateSystemMatrix.UpdateType update_type = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->update_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSystemMatrix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateSystemMatrix)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateSystemMatrix* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateSystemMatrix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateSystemMatrix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateSystemMatrix)
    MergeFrom(*source);
  }
}

void UpdateSystemMatrix::MergeFrom(const UpdateSystemMatrix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateSystemMatrix)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_data_id()) {
      set_data_id(from.data_id());
    }
    if (from.has_data_index()) {
      set_data_index(from.data_index());
    }
    if (from.has_matrix_type()) {
      set_matrix_type(from.matrix_type());
    }
    if (from.has_update_type()) {
      set_update_type(from.update_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpdateSystemMatrix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateSystemMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSystemMatrix::CopyFrom(const UpdateSystemMatrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateSystemMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSystemMatrix::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void UpdateSystemMatrix::Swap(UpdateSystemMatrix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateSystemMatrix::InternalSwap(UpdateSystemMatrix* other) {
  std::swap(scene_id_, other->scene_id_);
  std::swap(data_id_, other->data_id_);
  std::swap(data_index_, other->data_index_);
  std::swap(matrix_type_, other->matrix_type_);
  std::swap(update_type_, other->update_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateSystemMatrix::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSystemMatrix_descriptor_;
  metadata.reflection = UpdateSystemMatrix_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateSystemMatrix

// required int32 scene_id = 1;
bool UpdateSystemMatrix::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UpdateSystemMatrix::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
void UpdateSystemMatrix::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void UpdateSystemMatrix::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
 ::google::protobuf::int32 UpdateSystemMatrix::scene_id() const {
  // @@protoc_insertion_point(field_get:UpdateSystemMatrix.scene_id)
  return scene_id_;
}
 void UpdateSystemMatrix::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:UpdateSystemMatrix.scene_id)
}

// required int32 data_id = 2;
bool UpdateSystemMatrix::has_data_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UpdateSystemMatrix::set_has_data_id() {
  _has_bits_[0] |= 0x00000002u;
}
void UpdateSystemMatrix::clear_has_data_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void UpdateSystemMatrix::clear_data_id() {
  data_id_ = 0;
  clear_has_data_id();
}
 ::google::protobuf::int32 UpdateSystemMatrix::data_id() const {
  // @@protoc_insertion_point(field_get:UpdateSystemMatrix.data_id)
  return data_id_;
}
 void UpdateSystemMatrix::set_data_id(::google::protobuf::int32 value) {
  set_has_data_id();
  data_id_ = value;
  // @@protoc_insertion_point(field_set:UpdateSystemMatrix.data_id)
}

// required int32 data_index = 3;
bool UpdateSystemMatrix::has_data_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UpdateSystemMatrix::set_has_data_index() {
  _has_bits_[0] |= 0x00000004u;
}
void UpdateSystemMatrix::clear_has_data_index() {
  _has_bits_[0] &= ~0x00000004u;
}
void UpdateSystemMatrix::clear_data_index() {
  data_index_ = 0;
  clear_has_data_index();
}
 ::google::protobuf::int32 UpdateSystemMatrix::data_index() const {
  // @@protoc_insertion_point(field_get:UpdateSystemMatrix.data_index)
  return data_index_;
}
 void UpdateSystemMatrix::set_data_index(::google::protobuf::int32 value) {
  set_has_data_index();
  data_index_ = value;
  // @@protoc_insertion_point(field_set:UpdateSystemMatrix.data_index)
}

// required .UpdateSystemMatrix.MatrixType matrix_type = 4;
bool UpdateSystemMatrix::has_matrix_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UpdateSystemMatrix::set_has_matrix_type() {
  _has_bits_[0] |= 0x00000008u;
}
void UpdateSystemMatrix::clear_has_matrix_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void UpdateSystemMatrix::clear_matrix_type() {
  matrix_type_ = 0;
  clear_has_matrix_type();
}
 ::UpdateSystemMatrix_MatrixType UpdateSystemMatrix::matrix_type() const {
  // @@protoc_insertion_point(field_get:UpdateSystemMatrix.matrix_type)
  return static_cast< ::UpdateSystemMatrix_MatrixType >(matrix_type_);
}
 void UpdateSystemMatrix::set_matrix_type(::UpdateSystemMatrix_MatrixType value) {
  assert(::UpdateSystemMatrix_MatrixType_IsValid(value));
  set_has_matrix_type();
  matrix_type_ = value;
  // @@protoc_insertion_point(field_set:UpdateSystemMatrix.matrix_type)
}

// required .UpdateSystemMatrix.UpdateType update_type = 5;
bool UpdateSystemMatrix::has_update_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void UpdateSystemMatrix::set_has_update_type() {
  _has_bits_[0] |= 0x00000010u;
}
void UpdateSystemMatrix::clear_has_update_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void UpdateSystemMatrix::clear_update_type() {
  update_type_ = 0;
  clear_has_update_type();
}
 ::UpdateSystemMatrix_UpdateType UpdateSystemMatrix::update_type() const {
  // @@protoc_insertion_point(field_get:UpdateSystemMatrix.update_type)
  return static_cast< ::UpdateSystemMatrix_UpdateType >(update_type_);
}
 void UpdateSystemMatrix::set_update_type(::UpdateSystemMatrix_UpdateType value) {
  assert(::UpdateSystemMatrix_UpdateType_IsValid(value));
  set_has_update_type();
  update_type_ = value;
  // @@protoc_insertion_point(field_set:UpdateSystemMatrix.update_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroyObject::kSceneIdFieldNumber;
const int DestroyObject::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroyObject::DestroyObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DestroyObject)
}

void DestroyObject::InitAsDefaultInstance() {
}

DestroyObject::DestroyObject(const DestroyObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DestroyObject)
}

void DestroyObject::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DestroyObject::~DestroyObject() {
  // @@protoc_insertion_point(destructor:DestroyObject)
  SharedDtor();
}

void DestroyObject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DestroyObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyObject_descriptor_;
}

const DestroyObject& DestroyObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vroom_2eproto();
  return *default_instance_;
}

DestroyObject* DestroyObject::default_instance_ = NULL;

DestroyObject* DestroyObject::New(::google::protobuf::Arena* arena) const {
  DestroyObject* n = new DestroyObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroyObject::Clear() {
// @@protoc_insertion_point(message_clear_start:DestroyObject)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DestroyObject, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DestroyObject*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(scene_id_, id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DestroyObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DestroyObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 scene_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // required int32 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DestroyObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DestroyObject)
  return false;
#undef DO_
}

void DestroyObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DestroyObject)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }

  // required int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DestroyObject)
}

::google::protobuf::uint8* DestroyObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DestroyObject)
  // required int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }

  // required int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DestroyObject)
  return target;
}

int DestroyObject::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DestroyObject)
  int total_size = 0;

  if (has_scene_id()) {
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());
  }

  if (has_id()) {
    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
int DestroyObject::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DestroyObject)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 scene_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_id());

    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestroyObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DestroyObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DestroyObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DestroyObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DestroyObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DestroyObject)
    MergeFrom(*source);
  }
}

void DestroyObject::MergeFrom(const DestroyObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DestroyObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DestroyObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DestroyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestroyObject::CopyFrom(const DestroyObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DestroyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DestroyObject::Swap(DestroyObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroyObject::InternalSwap(DestroyObject* other) {
  std::swap(scene_id_, other->scene_id_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DestroyObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyObject_descriptor_;
  metadata.reflection = DestroyObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DestroyObject

// required int32 scene_id = 1;
bool DestroyObject::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DestroyObject::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
void DestroyObject::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void DestroyObject::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
 ::google::protobuf::int32 DestroyObject::scene_id() const {
  // @@protoc_insertion_point(field_get:DestroyObject.scene_id)
  return scene_id_;
}
 void DestroyObject::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:DestroyObject.scene_id)
}

// required int32 id = 2;
bool DestroyObject::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DestroyObject::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void DestroyObject::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void DestroyObject::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 DestroyObject::id() const {
  // @@protoc_insertion_point(field_get:DestroyObject.id)
  return id_;
}
 void DestroyObject::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:DestroyObject.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
