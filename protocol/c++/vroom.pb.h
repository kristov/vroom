// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vroom.proto

#ifndef PROTOBUF_vroom_2eproto__INCLUDED
#define PROTOBUF_vroom_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_vroom_2eproto();
void protobuf_AssignDesc_vroom_2eproto();
void protobuf_ShutdownFile_vroom_2eproto();

class CreateDataObject;
class CreateMemory;
class CreateScene;
class CreateTextureObject;
class DestroyObject;
class DestroyScene;
class Reply;
class RunProgram;
class SetSkybox;
class UpdateSystemMatrix;

enum CreateDataObject_Type {
  CreateDataObject_Type_UINT8 = 0,
  CreateDataObject_Type_UINT16 = 1,
  CreateDataObject_Type_UINT32 = 2,
  CreateDataObject_Type_FLOAT = 3,
  CreateDataObject_Type_VEC2 = 4,
  CreateDataObject_Type_VEC3 = 5,
  CreateDataObject_Type_VEC4 = 6,
  CreateDataObject_Type_MAT2 = 7,
  CreateDataObject_Type_MAT3 = 8,
  CreateDataObject_Type_MAT4 = 9
};
bool CreateDataObject_Type_IsValid(int value);
const CreateDataObject_Type CreateDataObject_Type_Type_MIN = CreateDataObject_Type_UINT8;
const CreateDataObject_Type CreateDataObject_Type_Type_MAX = CreateDataObject_Type_MAT4;
const int CreateDataObject_Type_Type_ARRAYSIZE = CreateDataObject_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateDataObject_Type_descriptor();
inline const ::std::string& CreateDataObject_Type_Name(CreateDataObject_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateDataObject_Type_descriptor(), value);
}
inline bool CreateDataObject_Type_Parse(
    const ::std::string& name, CreateDataObject_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateDataObject_Type>(
    CreateDataObject_Type_descriptor(), name, value);
}
enum CreateTextureObject_Format {
  CreateTextureObject_Format_BGR888 = 0,
  CreateTextureObject_Format_XBGR8888 = 1,
  CreateTextureObject_Format_ABGR8888 = 2,
  CreateTextureObject_Format_RGB888 = 3,
  CreateTextureObject_Format_XRGB8888 = 4,
  CreateTextureObject_Format_ARGB8888 = 5
};
bool CreateTextureObject_Format_IsValid(int value);
const CreateTextureObject_Format CreateTextureObject_Format_Format_MIN = CreateTextureObject_Format_BGR888;
const CreateTextureObject_Format CreateTextureObject_Format_Format_MAX = CreateTextureObject_Format_ARGB8888;
const int CreateTextureObject_Format_Format_ARRAYSIZE = CreateTextureObject_Format_Format_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateTextureObject_Format_descriptor();
inline const ::std::string& CreateTextureObject_Format_Name(CreateTextureObject_Format value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateTextureObject_Format_descriptor(), value);
}
inline bool CreateTextureObject_Format_Parse(
    const ::std::string& name, CreateTextureObject_Format* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateTextureObject_Format>(
    CreateTextureObject_Format_descriptor(), name, value);
}
enum CreateTextureObject_Type {
  CreateTextureObject_Type_TEXTURE_2D = 0,
  CreateTextureObject_Type_TEXTURE_CUBE_MAP = 1
};
bool CreateTextureObject_Type_IsValid(int value);
const CreateTextureObject_Type CreateTextureObject_Type_Type_MIN = CreateTextureObject_Type_TEXTURE_2D;
const CreateTextureObject_Type CreateTextureObject_Type_Type_MAX = CreateTextureObject_Type_TEXTURE_CUBE_MAP;
const int CreateTextureObject_Type_Type_ARRAYSIZE = CreateTextureObject_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateTextureObject_Type_descriptor();
inline const ::std::string& CreateTextureObject_Type_Name(CreateTextureObject_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateTextureObject_Type_descriptor(), value);
}
inline bool CreateTextureObject_Type_Parse(
    const ::std::string& name, CreateTextureObject_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateTextureObject_Type>(
    CreateTextureObject_Type_descriptor(), name, value);
}
enum UpdateSystemMatrix_MatrixType {
  UpdateSystemMatrix_MatrixType_HEAD = 0,
  UpdateSystemMatrix_MatrixType_BODY = 1
};
bool UpdateSystemMatrix_MatrixType_IsValid(int value);
const UpdateSystemMatrix_MatrixType UpdateSystemMatrix_MatrixType_MatrixType_MIN = UpdateSystemMatrix_MatrixType_HEAD;
const UpdateSystemMatrix_MatrixType UpdateSystemMatrix_MatrixType_MatrixType_MAX = UpdateSystemMatrix_MatrixType_BODY;
const int UpdateSystemMatrix_MatrixType_MatrixType_ARRAYSIZE = UpdateSystemMatrix_MatrixType_MatrixType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UpdateSystemMatrix_MatrixType_descriptor();
inline const ::std::string& UpdateSystemMatrix_MatrixType_Name(UpdateSystemMatrix_MatrixType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpdateSystemMatrix_MatrixType_descriptor(), value);
}
inline bool UpdateSystemMatrix_MatrixType_Parse(
    const ::std::string& name, UpdateSystemMatrix_MatrixType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateSystemMatrix_MatrixType>(
    UpdateSystemMatrix_MatrixType_descriptor(), name, value);
}
enum UpdateSystemMatrix_UpdateType {
  UpdateSystemMatrix_UpdateType_MULTIPLY = 0,
  UpdateSystemMatrix_UpdateType_SET = 1
};
bool UpdateSystemMatrix_UpdateType_IsValid(int value);
const UpdateSystemMatrix_UpdateType UpdateSystemMatrix_UpdateType_UpdateType_MIN = UpdateSystemMatrix_UpdateType_MULTIPLY;
const UpdateSystemMatrix_UpdateType UpdateSystemMatrix_UpdateType_UpdateType_MAX = UpdateSystemMatrix_UpdateType_SET;
const int UpdateSystemMatrix_UpdateType_UpdateType_ARRAYSIZE = UpdateSystemMatrix_UpdateType_UpdateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UpdateSystemMatrix_UpdateType_descriptor();
inline const ::std::string& UpdateSystemMatrix_UpdateType_Name(UpdateSystemMatrix_UpdateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpdateSystemMatrix_UpdateType_descriptor(), value);
}
inline bool UpdateSystemMatrix_UpdateType_Parse(
    const ::std::string& name, UpdateSystemMatrix_UpdateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateSystemMatrix_UpdateType>(
    UpdateSystemMatrix_UpdateType_descriptor(), name, value);
}
// ===================================================================

class Reply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Reply) */ {
 public:
  Reply();
  virtual ~Reply();

  Reply(const Reply& from);

  inline Reply& operator=(const Reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reply& default_instance();

  void Swap(Reply* other);

  // implements Message ----------------------------------------------

  inline Reply* New() const { return New(NULL); }

  Reply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reply& from);
  void MergeFrom(const Reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Reply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 error_code = 2;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Reply)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_error_code();
  inline void clear_has_error_code();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 error_code_;
  friend void  protobuf_AddDesc_vroom_2eproto();
  friend void protobuf_AssignDesc_vroom_2eproto();
  friend void protobuf_ShutdownFile_vroom_2eproto();

  void InitAsDefaultInstance();
  static Reply* default_instance_;
};
// -------------------------------------------------------------------

class CreateScene : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateScene) */ {
 public:
  CreateScene();
  virtual ~CreateScene();

  CreateScene(const CreateScene& from);

  inline CreateScene& operator=(const CreateScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateScene& default_instance();

  void Swap(CreateScene* other);

  // implements Message ----------------------------------------------

  inline CreateScene* New() const { return New(NULL); }

  CreateScene* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateScene& from);
  void MergeFrom(const CreateScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateScene* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CreateScene)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend void  protobuf_AddDesc_vroom_2eproto();
  friend void protobuf_AssignDesc_vroom_2eproto();
  friend void protobuf_ShutdownFile_vroom_2eproto();

  void InitAsDefaultInstance();
  static CreateScene* default_instance_;
};
// -------------------------------------------------------------------

class DestroyScene : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DestroyScene) */ {
 public:
  DestroyScene();
  virtual ~DestroyScene();

  DestroyScene(const DestroyScene& from);

  inline DestroyScene& operator=(const DestroyScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyScene& default_instance();

  void Swap(DestroyScene* other);

  // implements Message ----------------------------------------------

  inline DestroyScene* New() const { return New(NULL); }

  DestroyScene* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyScene& from);
  void MergeFrom(const DestroyScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DestroyScene* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DestroyScene)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_vroom_2eproto();
  friend void protobuf_AssignDesc_vroom_2eproto();
  friend void protobuf_ShutdownFile_vroom_2eproto();

  void InitAsDefaultInstance();
  static DestroyScene* default_instance_;
};
// -------------------------------------------------------------------

class CreateMemory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateMemory) */ {
 public:
  CreateMemory();
  virtual ~CreateMemory();

  CreateMemory(const CreateMemory& from);

  inline CreateMemory& operator=(const CreateMemory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMemory& default_instance();

  void Swap(CreateMemory* other);

  // implements Message ----------------------------------------------

  inline CreateMemory* New() const { return New(NULL); }

  CreateMemory* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateMemory& from);
  void MergeFrom(const CreateMemory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateMemory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  bool has_scene_id() const;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::int32 scene_id() const;
  void set_scene_id(::google::protobuf::int32 value);

  // required int32 size = 2;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CreateMemory)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_size();
  inline void clear_has_size();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 size_;
  friend void  protobuf_AddDesc_vroom_2eproto();
  friend void protobuf_AssignDesc_vroom_2eproto();
  friend void protobuf_ShutdownFile_vroom_2eproto();

  void InitAsDefaultInstance();
  static CreateMemory* default_instance_;
};
// -------------------------------------------------------------------

class CreateDataObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateDataObject) */ {
 public:
  CreateDataObject();
  virtual ~CreateDataObject();

  CreateDataObject(const CreateDataObject& from);

  inline CreateDataObject& operator=(const CreateDataObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateDataObject& default_instance();

  void Swap(CreateDataObject* other);

  // implements Message ----------------------------------------------

  inline CreateDataObject* New() const { return New(NULL); }

  CreateDataObject* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateDataObject& from);
  void MergeFrom(const CreateDataObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateDataObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CreateDataObject_Type Type;
  static const Type UINT8 =
    CreateDataObject_Type_UINT8;
  static const Type UINT16 =
    CreateDataObject_Type_UINT16;
  static const Type UINT32 =
    CreateDataObject_Type_UINT32;
  static const Type FLOAT =
    CreateDataObject_Type_FLOAT;
  static const Type VEC2 =
    CreateDataObject_Type_VEC2;
  static const Type VEC3 =
    CreateDataObject_Type_VEC3;
  static const Type VEC4 =
    CreateDataObject_Type_VEC4;
  static const Type MAT2 =
    CreateDataObject_Type_MAT2;
  static const Type MAT3 =
    CreateDataObject_Type_MAT3;
  static const Type MAT4 =
    CreateDataObject_Type_MAT4;
  static inline bool Type_IsValid(int value) {
    return CreateDataObject_Type_IsValid(value);
  }
  static const Type Type_MIN =
    CreateDataObject_Type_Type_MIN;
  static const Type Type_MAX =
    CreateDataObject_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    CreateDataObject_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return CreateDataObject_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return CreateDataObject_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return CreateDataObject_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  bool has_scene_id() const;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::int32 scene_id() const;
  void set_scene_id(::google::protobuf::int32 value);

  // required int32 memory_id = 2;
  bool has_memory_id() const;
  void clear_memory_id();
  static const int kMemoryIdFieldNumber = 2;
  ::google::protobuf::int32 memory_id() const;
  void set_memory_id(::google::protobuf::int32 value);

  // required int32 memory_offset = 3;
  bool has_memory_offset() const;
  void clear_memory_offset();
  static const int kMemoryOffsetFieldNumber = 3;
  ::google::protobuf::int32 memory_offset() const;
  void set_memory_offset(::google::protobuf::int32 value);

  // required int32 memory_length = 4;
  bool has_memory_length() const;
  void clear_memory_length();
  static const int kMemoryLengthFieldNumber = 4;
  ::google::protobuf::int32 memory_length() const;
  void set_memory_length(::google::protobuf::int32 value);

  // required .CreateDataObject.Type type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::CreateDataObject_Type type() const;
  void set_type(::CreateDataObject_Type value);

  // @@protoc_insertion_point(class_scope:CreateDataObject)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_memory_id();
  inline void clear_has_memory_id();
  inline void set_has_memory_offset();
  inline void clear_has_memory_offset();
  inline void set_has_memory_length();
  inline void clear_has_memory_length();
  inline void set_has_type();
  inline void clear_has_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 memory_id_;
  ::google::protobuf::int32 memory_offset_;
  ::google::protobuf::int32 memory_length_;
  int type_;
  friend void  protobuf_AddDesc_vroom_2eproto();
  friend void protobuf_AssignDesc_vroom_2eproto();
  friend void protobuf_ShutdownFile_vroom_2eproto();

  void InitAsDefaultInstance();
  static CreateDataObject* default_instance_;
};
// -------------------------------------------------------------------

class CreateTextureObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateTextureObject) */ {
 public:
  CreateTextureObject();
  virtual ~CreateTextureObject();

  CreateTextureObject(const CreateTextureObject& from);

  inline CreateTextureObject& operator=(const CreateTextureObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTextureObject& default_instance();

  void Swap(CreateTextureObject* other);

  // implements Message ----------------------------------------------

  inline CreateTextureObject* New() const { return New(NULL); }

  CreateTextureObject* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTextureObject& from);
  void MergeFrom(const CreateTextureObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateTextureObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CreateTextureObject_Format Format;
  static const Format BGR888 =
    CreateTextureObject_Format_BGR888;
  static const Format XBGR8888 =
    CreateTextureObject_Format_XBGR8888;
  static const Format ABGR8888 =
    CreateTextureObject_Format_ABGR8888;
  static const Format RGB888 =
    CreateTextureObject_Format_RGB888;
  static const Format XRGB8888 =
    CreateTextureObject_Format_XRGB8888;
  static const Format ARGB8888 =
    CreateTextureObject_Format_ARGB8888;
  static inline bool Format_IsValid(int value) {
    return CreateTextureObject_Format_IsValid(value);
  }
  static const Format Format_MIN =
    CreateTextureObject_Format_Format_MIN;
  static const Format Format_MAX =
    CreateTextureObject_Format_Format_MAX;
  static const int Format_ARRAYSIZE =
    CreateTextureObject_Format_Format_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Format_descriptor() {
    return CreateTextureObject_Format_descriptor();
  }
  static inline const ::std::string& Format_Name(Format value) {
    return CreateTextureObject_Format_Name(value);
  }
  static inline bool Format_Parse(const ::std::string& name,
      Format* value) {
    return CreateTextureObject_Format_Parse(name, value);
  }

  typedef CreateTextureObject_Type Type;
  static const Type TEXTURE_2D =
    CreateTextureObject_Type_TEXTURE_2D;
  static const Type TEXTURE_CUBE_MAP =
    CreateTextureObject_Type_TEXTURE_CUBE_MAP;
  static inline bool Type_IsValid(int value) {
    return CreateTextureObject_Type_IsValid(value);
  }
  static const Type Type_MIN =
    CreateTextureObject_Type_Type_MIN;
  static const Type Type_MAX =
    CreateTextureObject_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    CreateTextureObject_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return CreateTextureObject_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return CreateTextureObject_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return CreateTextureObject_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  bool has_scene_id() const;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::int32 scene_id() const;
  void set_scene_id(::google::protobuf::int32 value);

  // required int32 data_id = 2;
  bool has_data_id() const;
  void clear_data_id();
  static const int kDataIdFieldNumber = 2;
  ::google::protobuf::int32 data_id() const;
  void set_data_id(::google::protobuf::int32 value);

  // required int32 width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // required int32 height = 4;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // required .CreateTextureObject.Format format = 5;
  bool has_format() const;
  void clear_format();
  static const int kFormatFieldNumber = 5;
  ::CreateTextureObject_Format format() const;
  void set_format(::CreateTextureObject_Format value);

  // required .CreateTextureObject.Type type = 6;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::CreateTextureObject_Type type() const;
  void set_type(::CreateTextureObject_Type value);

  // @@protoc_insertion_point(class_scope:CreateTextureObject)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_data_id();
  inline void clear_has_data_id();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_format();
  inline void clear_has_format();
  inline void set_has_type();
  inline void clear_has_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 data_id_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  int format_;
  int type_;
  friend void  protobuf_AddDesc_vroom_2eproto();
  friend void protobuf_AssignDesc_vroom_2eproto();
  friend void protobuf_ShutdownFile_vroom_2eproto();

  void InitAsDefaultInstance();
  static CreateTextureObject* default_instance_;
};
// -------------------------------------------------------------------

class RunProgram : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RunProgram) */ {
 public:
  RunProgram();
  virtual ~RunProgram();

  RunProgram(const RunProgram& from);

  inline RunProgram& operator=(const RunProgram& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunProgram& default_instance();

  void Swap(RunProgram* other);

  // implements Message ----------------------------------------------

  inline RunProgram* New() const { return New(NULL); }

  RunProgram* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunProgram& from);
  void MergeFrom(const RunProgram& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RunProgram* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  bool has_scene_id() const;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::int32 scene_id() const;
  void set_scene_id(::google::protobuf::int32 value);

  // required int32 program_id = 2;
  bool has_program_id() const;
  void clear_program_id();
  static const int kProgramIdFieldNumber = 2;
  ::google::protobuf::int32 program_id() const;
  void set_program_id(::google::protobuf::int32 value);

  // required int32 register_id = 3;
  bool has_register_id() const;
  void clear_register_id();
  static const int kRegisterIdFieldNumber = 3;
  ::google::protobuf::int32 register_id() const;
  void set_register_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RunProgram)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_program_id();
  inline void clear_has_program_id();
  inline void set_has_register_id();
  inline void clear_has_register_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 program_id_;
  ::google::protobuf::int32 register_id_;
  friend void  protobuf_AddDesc_vroom_2eproto();
  friend void protobuf_AssignDesc_vroom_2eproto();
  friend void protobuf_ShutdownFile_vroom_2eproto();

  void InitAsDefaultInstance();
  static RunProgram* default_instance_;
};
// -------------------------------------------------------------------

class SetSkybox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetSkybox) */ {
 public:
  SetSkybox();
  virtual ~SetSkybox();

  SetSkybox(const SetSkybox& from);

  inline SetSkybox& operator=(const SetSkybox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSkybox& default_instance();

  void Swap(SetSkybox* other);

  // implements Message ----------------------------------------------

  inline SetSkybox* New() const { return New(NULL); }

  SetSkybox* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetSkybox& from);
  void MergeFrom(const SetSkybox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetSkybox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  bool has_scene_id() const;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::int32 scene_id() const;
  void set_scene_id(::google::protobuf::int32 value);

  // required int32 texture_id = 2;
  bool has_texture_id() const;
  void clear_texture_id();
  static const int kTextureIdFieldNumber = 2;
  ::google::protobuf::int32 texture_id() const;
  void set_texture_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetSkybox)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_texture_id();
  inline void clear_has_texture_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 texture_id_;
  friend void  protobuf_AddDesc_vroom_2eproto();
  friend void protobuf_AssignDesc_vroom_2eproto();
  friend void protobuf_ShutdownFile_vroom_2eproto();

  void InitAsDefaultInstance();
  static SetSkybox* default_instance_;
};
// -------------------------------------------------------------------

class UpdateSystemMatrix : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpdateSystemMatrix) */ {
 public:
  UpdateSystemMatrix();
  virtual ~UpdateSystemMatrix();

  UpdateSystemMatrix(const UpdateSystemMatrix& from);

  inline UpdateSystemMatrix& operator=(const UpdateSystemMatrix& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateSystemMatrix& default_instance();

  void Swap(UpdateSystemMatrix* other);

  // implements Message ----------------------------------------------

  inline UpdateSystemMatrix* New() const { return New(NULL); }

  UpdateSystemMatrix* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateSystemMatrix& from);
  void MergeFrom(const UpdateSystemMatrix& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateSystemMatrix* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UpdateSystemMatrix_MatrixType MatrixType;
  static const MatrixType HEAD =
    UpdateSystemMatrix_MatrixType_HEAD;
  static const MatrixType BODY =
    UpdateSystemMatrix_MatrixType_BODY;
  static inline bool MatrixType_IsValid(int value) {
    return UpdateSystemMatrix_MatrixType_IsValid(value);
  }
  static const MatrixType MatrixType_MIN =
    UpdateSystemMatrix_MatrixType_MatrixType_MIN;
  static const MatrixType MatrixType_MAX =
    UpdateSystemMatrix_MatrixType_MatrixType_MAX;
  static const int MatrixType_ARRAYSIZE =
    UpdateSystemMatrix_MatrixType_MatrixType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MatrixType_descriptor() {
    return UpdateSystemMatrix_MatrixType_descriptor();
  }
  static inline const ::std::string& MatrixType_Name(MatrixType value) {
    return UpdateSystemMatrix_MatrixType_Name(value);
  }
  static inline bool MatrixType_Parse(const ::std::string& name,
      MatrixType* value) {
    return UpdateSystemMatrix_MatrixType_Parse(name, value);
  }

  typedef UpdateSystemMatrix_UpdateType UpdateType;
  static const UpdateType MULTIPLY =
    UpdateSystemMatrix_UpdateType_MULTIPLY;
  static const UpdateType SET =
    UpdateSystemMatrix_UpdateType_SET;
  static inline bool UpdateType_IsValid(int value) {
    return UpdateSystemMatrix_UpdateType_IsValid(value);
  }
  static const UpdateType UpdateType_MIN =
    UpdateSystemMatrix_UpdateType_UpdateType_MIN;
  static const UpdateType UpdateType_MAX =
    UpdateSystemMatrix_UpdateType_UpdateType_MAX;
  static const int UpdateType_ARRAYSIZE =
    UpdateSystemMatrix_UpdateType_UpdateType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  UpdateType_descriptor() {
    return UpdateSystemMatrix_UpdateType_descriptor();
  }
  static inline const ::std::string& UpdateType_Name(UpdateType value) {
    return UpdateSystemMatrix_UpdateType_Name(value);
  }
  static inline bool UpdateType_Parse(const ::std::string& name,
      UpdateType* value) {
    return UpdateSystemMatrix_UpdateType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  bool has_scene_id() const;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::int32 scene_id() const;
  void set_scene_id(::google::protobuf::int32 value);

  // required int32 data_id = 2;
  bool has_data_id() const;
  void clear_data_id();
  static const int kDataIdFieldNumber = 2;
  ::google::protobuf::int32 data_id() const;
  void set_data_id(::google::protobuf::int32 value);

  // required int32 data_index = 3;
  bool has_data_index() const;
  void clear_data_index();
  static const int kDataIndexFieldNumber = 3;
  ::google::protobuf::int32 data_index() const;
  void set_data_index(::google::protobuf::int32 value);

  // required .UpdateSystemMatrix.MatrixType matrix_type = 4;
  bool has_matrix_type() const;
  void clear_matrix_type();
  static const int kMatrixTypeFieldNumber = 4;
  ::UpdateSystemMatrix_MatrixType matrix_type() const;
  void set_matrix_type(::UpdateSystemMatrix_MatrixType value);

  // required .UpdateSystemMatrix.UpdateType update_type = 5;
  bool has_update_type() const;
  void clear_update_type();
  static const int kUpdateTypeFieldNumber = 5;
  ::UpdateSystemMatrix_UpdateType update_type() const;
  void set_update_type(::UpdateSystemMatrix_UpdateType value);

  // @@protoc_insertion_point(class_scope:UpdateSystemMatrix)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_data_id();
  inline void clear_has_data_id();
  inline void set_has_data_index();
  inline void clear_has_data_index();
  inline void set_has_matrix_type();
  inline void clear_has_matrix_type();
  inline void set_has_update_type();
  inline void clear_has_update_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 data_id_;
  ::google::protobuf::int32 data_index_;
  int matrix_type_;
  int update_type_;
  friend void  protobuf_AddDesc_vroom_2eproto();
  friend void protobuf_AssignDesc_vroom_2eproto();
  friend void protobuf_ShutdownFile_vroom_2eproto();

  void InitAsDefaultInstance();
  static UpdateSystemMatrix* default_instance_;
};
// -------------------------------------------------------------------

class DestroyObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DestroyObject) */ {
 public:
  DestroyObject();
  virtual ~DestroyObject();

  DestroyObject(const DestroyObject& from);

  inline DestroyObject& operator=(const DestroyObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyObject& default_instance();

  void Swap(DestroyObject* other);

  // implements Message ----------------------------------------------

  inline DestroyObject* New() const { return New(NULL); }

  DestroyObject* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyObject& from);
  void MergeFrom(const DestroyObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DestroyObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  bool has_scene_id() const;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::int32 scene_id() const;
  void set_scene_id(::google::protobuf::int32 value);

  // required int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DestroyObject)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_id();
  inline void clear_has_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_vroom_2eproto();
  friend void protobuf_AssignDesc_vroom_2eproto();
  friend void protobuf_ShutdownFile_vroom_2eproto();

  void InitAsDefaultInstance();
  static DestroyObject* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Reply

// required int32 id = 1;
inline bool Reply::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Reply::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Reply::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Reply::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Reply::id() const {
  // @@protoc_insertion_point(field_get:Reply.id)
  return id_;
}
inline void Reply::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Reply.id)
}

// required int32 error_code = 2;
inline bool Reply::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Reply::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Reply::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Reply::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 Reply::error_code() const {
  // @@protoc_insertion_point(field_get:Reply.error_code)
  return error_code_;
}
inline void Reply::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:Reply.error_code)
}

// -------------------------------------------------------------------

// CreateScene

// required string name = 1;
inline bool CreateScene::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateScene::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateScene::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateScene::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CreateScene::name() const {
  // @@protoc_insertion_point(field_get:CreateScene.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateScene::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateScene.name)
}
inline void CreateScene::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateScene.name)
}
inline void CreateScene::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateScene.name)
}
inline ::std::string* CreateScene::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CreateScene.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateScene::release_name() {
  // @@protoc_insertion_point(field_release:CreateScene.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateScene::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CreateScene.name)
}

// -------------------------------------------------------------------

// DestroyScene

// required int32 id = 1;
inline bool DestroyScene::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyScene::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyScene::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyScene::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DestroyScene::id() const {
  // @@protoc_insertion_point(field_get:DestroyScene.id)
  return id_;
}
inline void DestroyScene::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:DestroyScene.id)
}

// -------------------------------------------------------------------

// CreateMemory

// required int32 scene_id = 1;
inline bool CreateMemory::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateMemory::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateMemory::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateMemory::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 CreateMemory::scene_id() const {
  // @@protoc_insertion_point(field_get:CreateMemory.scene_id)
  return scene_id_;
}
inline void CreateMemory::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:CreateMemory.scene_id)
}

// required int32 size = 2;
inline bool CreateMemory::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateMemory::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateMemory::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateMemory::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 CreateMemory::size() const {
  // @@protoc_insertion_point(field_get:CreateMemory.size)
  return size_;
}
inline void CreateMemory::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:CreateMemory.size)
}

// -------------------------------------------------------------------

// CreateDataObject

// required int32 scene_id = 1;
inline bool CreateDataObject::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateDataObject::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateDataObject::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateDataObject::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 CreateDataObject::scene_id() const {
  // @@protoc_insertion_point(field_get:CreateDataObject.scene_id)
  return scene_id_;
}
inline void CreateDataObject::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:CreateDataObject.scene_id)
}

// required int32 memory_id = 2;
inline bool CreateDataObject::has_memory_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateDataObject::set_has_memory_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateDataObject::clear_has_memory_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateDataObject::clear_memory_id() {
  memory_id_ = 0;
  clear_has_memory_id();
}
inline ::google::protobuf::int32 CreateDataObject::memory_id() const {
  // @@protoc_insertion_point(field_get:CreateDataObject.memory_id)
  return memory_id_;
}
inline void CreateDataObject::set_memory_id(::google::protobuf::int32 value) {
  set_has_memory_id();
  memory_id_ = value;
  // @@protoc_insertion_point(field_set:CreateDataObject.memory_id)
}

// required int32 memory_offset = 3;
inline bool CreateDataObject::has_memory_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateDataObject::set_has_memory_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateDataObject::clear_has_memory_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateDataObject::clear_memory_offset() {
  memory_offset_ = 0;
  clear_has_memory_offset();
}
inline ::google::protobuf::int32 CreateDataObject::memory_offset() const {
  // @@protoc_insertion_point(field_get:CreateDataObject.memory_offset)
  return memory_offset_;
}
inline void CreateDataObject::set_memory_offset(::google::protobuf::int32 value) {
  set_has_memory_offset();
  memory_offset_ = value;
  // @@protoc_insertion_point(field_set:CreateDataObject.memory_offset)
}

// required int32 memory_length = 4;
inline bool CreateDataObject::has_memory_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateDataObject::set_has_memory_length() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateDataObject::clear_has_memory_length() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateDataObject::clear_memory_length() {
  memory_length_ = 0;
  clear_has_memory_length();
}
inline ::google::protobuf::int32 CreateDataObject::memory_length() const {
  // @@protoc_insertion_point(field_get:CreateDataObject.memory_length)
  return memory_length_;
}
inline void CreateDataObject::set_memory_length(::google::protobuf::int32 value) {
  set_has_memory_length();
  memory_length_ = value;
  // @@protoc_insertion_point(field_set:CreateDataObject.memory_length)
}

// required .CreateDataObject.Type type = 5;
inline bool CreateDataObject::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateDataObject::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateDataObject::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateDataObject::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::CreateDataObject_Type CreateDataObject::type() const {
  // @@protoc_insertion_point(field_get:CreateDataObject.type)
  return static_cast< ::CreateDataObject_Type >(type_);
}
inline void CreateDataObject::set_type(::CreateDataObject_Type value) {
  assert(::CreateDataObject_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CreateDataObject.type)
}

// -------------------------------------------------------------------

// CreateTextureObject

// required int32 scene_id = 1;
inline bool CreateTextureObject::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateTextureObject::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateTextureObject::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateTextureObject::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 CreateTextureObject::scene_id() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.scene_id)
  return scene_id_;
}
inline void CreateTextureObject::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.scene_id)
}

// required int32 data_id = 2;
inline bool CreateTextureObject::has_data_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateTextureObject::set_has_data_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateTextureObject::clear_has_data_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateTextureObject::clear_data_id() {
  data_id_ = 0;
  clear_has_data_id();
}
inline ::google::protobuf::int32 CreateTextureObject::data_id() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.data_id)
  return data_id_;
}
inline void CreateTextureObject::set_data_id(::google::protobuf::int32 value) {
  set_has_data_id();
  data_id_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.data_id)
}

// required int32 width = 3;
inline bool CreateTextureObject::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateTextureObject::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateTextureObject::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateTextureObject::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 CreateTextureObject::width() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.width)
  return width_;
}
inline void CreateTextureObject::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.width)
}

// required int32 height = 4;
inline bool CreateTextureObject::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateTextureObject::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateTextureObject::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateTextureObject::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 CreateTextureObject::height() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.height)
  return height_;
}
inline void CreateTextureObject::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.height)
}

// required .CreateTextureObject.Format format = 5;
inline bool CreateTextureObject::has_format() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateTextureObject::set_has_format() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateTextureObject::clear_has_format() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateTextureObject::clear_format() {
  format_ = 0;
  clear_has_format();
}
inline ::CreateTextureObject_Format CreateTextureObject::format() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.format)
  return static_cast< ::CreateTextureObject_Format >(format_);
}
inline void CreateTextureObject::set_format(::CreateTextureObject_Format value) {
  assert(::CreateTextureObject_Format_IsValid(value));
  set_has_format();
  format_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.format)
}

// required .CreateTextureObject.Type type = 6;
inline bool CreateTextureObject::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateTextureObject::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateTextureObject::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateTextureObject::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::CreateTextureObject_Type CreateTextureObject::type() const {
  // @@protoc_insertion_point(field_get:CreateTextureObject.type)
  return static_cast< ::CreateTextureObject_Type >(type_);
}
inline void CreateTextureObject::set_type(::CreateTextureObject_Type value) {
  assert(::CreateTextureObject_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CreateTextureObject.type)
}

// -------------------------------------------------------------------

// RunProgram

// required int32 scene_id = 1;
inline bool RunProgram::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunProgram::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunProgram::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunProgram::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 RunProgram::scene_id() const {
  // @@protoc_insertion_point(field_get:RunProgram.scene_id)
  return scene_id_;
}
inline void RunProgram::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:RunProgram.scene_id)
}

// required int32 program_id = 2;
inline bool RunProgram::has_program_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RunProgram::set_has_program_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RunProgram::clear_has_program_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RunProgram::clear_program_id() {
  program_id_ = 0;
  clear_has_program_id();
}
inline ::google::protobuf::int32 RunProgram::program_id() const {
  // @@protoc_insertion_point(field_get:RunProgram.program_id)
  return program_id_;
}
inline void RunProgram::set_program_id(::google::protobuf::int32 value) {
  set_has_program_id();
  program_id_ = value;
  // @@protoc_insertion_point(field_set:RunProgram.program_id)
}

// required int32 register_id = 3;
inline bool RunProgram::has_register_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RunProgram::set_has_register_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RunProgram::clear_has_register_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RunProgram::clear_register_id() {
  register_id_ = 0;
  clear_has_register_id();
}
inline ::google::protobuf::int32 RunProgram::register_id() const {
  // @@protoc_insertion_point(field_get:RunProgram.register_id)
  return register_id_;
}
inline void RunProgram::set_register_id(::google::protobuf::int32 value) {
  set_has_register_id();
  register_id_ = value;
  // @@protoc_insertion_point(field_set:RunProgram.register_id)
}

// -------------------------------------------------------------------

// SetSkybox

// required int32 scene_id = 1;
inline bool SetSkybox::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetSkybox::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetSkybox::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetSkybox::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 SetSkybox::scene_id() const {
  // @@protoc_insertion_point(field_get:SetSkybox.scene_id)
  return scene_id_;
}
inline void SetSkybox::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:SetSkybox.scene_id)
}

// required int32 texture_id = 2;
inline bool SetSkybox::has_texture_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetSkybox::set_has_texture_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetSkybox::clear_has_texture_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetSkybox::clear_texture_id() {
  texture_id_ = 0;
  clear_has_texture_id();
}
inline ::google::protobuf::int32 SetSkybox::texture_id() const {
  // @@protoc_insertion_point(field_get:SetSkybox.texture_id)
  return texture_id_;
}
inline void SetSkybox::set_texture_id(::google::protobuf::int32 value) {
  set_has_texture_id();
  texture_id_ = value;
  // @@protoc_insertion_point(field_set:SetSkybox.texture_id)
}

// -------------------------------------------------------------------

// UpdateSystemMatrix

// required int32 scene_id = 1;
inline bool UpdateSystemMatrix::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateSystemMatrix::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateSystemMatrix::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateSystemMatrix::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 UpdateSystemMatrix::scene_id() const {
  // @@protoc_insertion_point(field_get:UpdateSystemMatrix.scene_id)
  return scene_id_;
}
inline void UpdateSystemMatrix::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:UpdateSystemMatrix.scene_id)
}

// required int32 data_id = 2;
inline bool UpdateSystemMatrix::has_data_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateSystemMatrix::set_has_data_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateSystemMatrix::clear_has_data_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateSystemMatrix::clear_data_id() {
  data_id_ = 0;
  clear_has_data_id();
}
inline ::google::protobuf::int32 UpdateSystemMatrix::data_id() const {
  // @@protoc_insertion_point(field_get:UpdateSystemMatrix.data_id)
  return data_id_;
}
inline void UpdateSystemMatrix::set_data_id(::google::protobuf::int32 value) {
  set_has_data_id();
  data_id_ = value;
  // @@protoc_insertion_point(field_set:UpdateSystemMatrix.data_id)
}

// required int32 data_index = 3;
inline bool UpdateSystemMatrix::has_data_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateSystemMatrix::set_has_data_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateSystemMatrix::clear_has_data_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateSystemMatrix::clear_data_index() {
  data_index_ = 0;
  clear_has_data_index();
}
inline ::google::protobuf::int32 UpdateSystemMatrix::data_index() const {
  // @@protoc_insertion_point(field_get:UpdateSystemMatrix.data_index)
  return data_index_;
}
inline void UpdateSystemMatrix::set_data_index(::google::protobuf::int32 value) {
  set_has_data_index();
  data_index_ = value;
  // @@protoc_insertion_point(field_set:UpdateSystemMatrix.data_index)
}

// required .UpdateSystemMatrix.MatrixType matrix_type = 4;
inline bool UpdateSystemMatrix::has_matrix_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateSystemMatrix::set_has_matrix_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateSystemMatrix::clear_has_matrix_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateSystemMatrix::clear_matrix_type() {
  matrix_type_ = 0;
  clear_has_matrix_type();
}
inline ::UpdateSystemMatrix_MatrixType UpdateSystemMatrix::matrix_type() const {
  // @@protoc_insertion_point(field_get:UpdateSystemMatrix.matrix_type)
  return static_cast< ::UpdateSystemMatrix_MatrixType >(matrix_type_);
}
inline void UpdateSystemMatrix::set_matrix_type(::UpdateSystemMatrix_MatrixType value) {
  assert(::UpdateSystemMatrix_MatrixType_IsValid(value));
  set_has_matrix_type();
  matrix_type_ = value;
  // @@protoc_insertion_point(field_set:UpdateSystemMatrix.matrix_type)
}

// required .UpdateSystemMatrix.UpdateType update_type = 5;
inline bool UpdateSystemMatrix::has_update_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateSystemMatrix::set_has_update_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateSystemMatrix::clear_has_update_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateSystemMatrix::clear_update_type() {
  update_type_ = 0;
  clear_has_update_type();
}
inline ::UpdateSystemMatrix_UpdateType UpdateSystemMatrix::update_type() const {
  // @@protoc_insertion_point(field_get:UpdateSystemMatrix.update_type)
  return static_cast< ::UpdateSystemMatrix_UpdateType >(update_type_);
}
inline void UpdateSystemMatrix::set_update_type(::UpdateSystemMatrix_UpdateType value) {
  assert(::UpdateSystemMatrix_UpdateType_IsValid(value));
  set_has_update_type();
  update_type_ = value;
  // @@protoc_insertion_point(field_set:UpdateSystemMatrix.update_type)
}

// -------------------------------------------------------------------

// DestroyObject

// required int32 scene_id = 1;
inline bool DestroyObject::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyObject::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyObject::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyObject::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 DestroyObject::scene_id() const {
  // @@protoc_insertion_point(field_get:DestroyObject.scene_id)
  return scene_id_;
}
inline void DestroyObject::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:DestroyObject.scene_id)
}

// required int32 id = 2;
inline bool DestroyObject::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DestroyObject::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DestroyObject::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DestroyObject::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DestroyObject::id() const {
  // @@protoc_insertion_point(field_get:DestroyObject.id)
  return id_;
}
inline void DestroyObject::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:DestroyObject.id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CreateDataObject_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CreateDataObject_Type>() {
  return ::CreateDataObject_Type_descriptor();
}
template <> struct is_proto_enum< ::CreateTextureObject_Format> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CreateTextureObject_Format>() {
  return ::CreateTextureObject_Format_descriptor();
}
template <> struct is_proto_enum< ::CreateTextureObject_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CreateTextureObject_Type>() {
  return ::CreateTextureObject_Type_descriptor();
}
template <> struct is_proto_enum< ::UpdateSystemMatrix_MatrixType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::UpdateSystemMatrix_MatrixType>() {
  return ::UpdateSystemMatrix_MatrixType_descriptor();
}
template <> struct is_proto_enum< ::UpdateSystemMatrix_UpdateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::UpdateSystemMatrix_UpdateType>() {
  return ::UpdateSystemMatrix_UpdateType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vroom_2eproto__INCLUDED
